-- LocalScript: AutoFarmATM (StarterPlayerScripts)
-- ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏π‡πâ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏´‡∏≤‡∏Å‡∏ï‡∏π‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")

local ATMFolder = Workspace:WaitForChild("Map"):WaitForChild("Props"):WaitForChild("ATMs")

local currentATM = nil
local moving = false

-- üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ATM ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (ProximityPrompt.Enabled == true)
local function IsATMReady(atm)
    local prompt = atm:FindFirstChildWhichIsA("ProximityPrompt", true)
    if prompt then
        return prompt.Enabled
    end
    return false
end

-- üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ATM ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
local function FindAvailableATM()
    for index, atm in pairs(ATMFolder:GetChildren()) do
        local pos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
        print("[ATM ‡∏•‡∏≥‡∏î‡∏±‡∏ö " .. index .. "] =>", atm:GetFullName())
        if IsATMReady(atm) then
            print("[‚úÖ] ‡πÄ‡∏à‡∏≠ ATM ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
            return atm
        else
            print("[‚õî] ATM ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        end
    end
    return nil
end

-- üß≠ ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Pathfinding
local function WalkToATM(atm)
    if not atm then return end
    moving = true
    currentATM = atm
    local targetPos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentCanClimb = true,
        WaypointSpacing = 4
    })
    path:ComputeAsync(rootPart.Position, targetPos)
    if path.Status == Enum.PathStatus.Success then
        print("[‚úÖ AutoFarmATM] ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM =>", atm:GetFullName())
        for _, waypoint in ipairs(path:GetWaypoints()) do
            -- ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ ATM ‡∏¢‡∏±‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if not IsATMReady(currentATM) then
                print("[‚ö†Ô∏è] ATM ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏´‡∏≤‡∏ï‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà")
                moving = false
                return
            end
            humanoid:MoveTo(waypoint.Position)
            humanoid.MoveToFinished:Wait()
        end
    else
        warn("[‚ùå AutoFarmATM] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì path ‡πÑ‡∏î‡πâ! ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", path.Status.Name)
    end
    moving = false
end

-- üîÅ ‡∏•‡∏π‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏° ATM ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏π‡πâ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°
while true do
    if not moving then
        local atm = FindAvailableATM()
        if atm then
            WalkToATM(atm)
        else
            warn("[AutoFarmATM] ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ATM ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        end
    end
    task.wait(3)
end
