-- LocalScript: AutoFarmATM (StarterPlayerScripts)
-- ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ loop: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ERROR ‡∏î‡πâ‡∏ß‡∏¢ event ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")

local ATMFolder = Workspace:WaitForChild("Map"):WaitForChild("Props"):WaitForChild("ATMs")

local currentATM = nil
local atmConnection = nil

-- üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ATM ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ERROR ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function IsATMError(atm)
    for _, part in pairs(atm:GetDescendants()) do
        if part:IsA("TextLabel") and string.find(string.upper(part.Text), "ERROR") then
            return true
        end
    end
    return false
end

-- üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà Error)
local function FindNearestATM()
    local nearestATM = nil
    local shortestDist = math.huge
    for _, atm in pairs(ATMFolder:GetChildren()) do
        if IsATMError(atm) then
            print("[‚õî] ‡∏Ç‡πâ‡∏≤‡∏° ATM ‡∏ó‡∏µ‡πà Error:", atm:GetFullName())
            continue
        end
        local pos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
        local dist = (pos - rootPart.Position).Magnitude
        if dist < shortestDist then
            shortestDist = dist
            nearestATM = atm
        end
    end
    return nearestATM
end

-- üß≠ ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Pathfinding
local function WalkToATM(atm)
    local targetPos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentCanClimb = true,
        WaypointSpacing = 4
    })
    path:ComputeAsync(rootPart.Position, targetPos)
    if path.Status == Enum.PathStatus.Success then
        print("[‚úÖ AutoFarmATM] Path ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM...")
        for _, waypoint in ipairs(path:GetWaypoints()) do
            humanoid:MoveTo(waypoint.Position)
            humanoid.MoveToFinished:Wait()
        end
        return true
    else
        warn("[‚ùå AutoFarmATM] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì path ‡πÑ‡∏î‡πâ! ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", path.Status.Name)
        return false
    end
end

-- üì° ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ ATM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠ ERROR
local function MonitorATMError(atm)
    if atmConnection then
        atmConnection:Disconnect()
        atmConnection = nil
    end
    for _, part in pairs(atm:GetDescendants()) do
        if part:IsA("TextLabel") and part.Text then
            atmConnection = part:GetPropertyChangedSignal("Text"):Connect(function()
                if string.find(string.upper(part.Text), "ERROR") then
                    warn("[‚ö†Ô∏è ATM] ‡∏û‡∏ö ERROR ‡∏ó‡∏µ‡πà", atm:GetFullName())
                    local newATM = FindNearestATM()
                    if newATM and newATM ~= atm then
                        currentATM = newATM
                        WalkToATM(currentATM)
                        MonitorATMError(currentATM)
                    end
                end
            end)
            break
        end
    end
end

-- üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏° ATM ‡πÅ‡∏ö‡∏ö event-driven
currentATM = FindNearestATM()
if currentATM then
    WalkToATM(currentATM)
    MonitorATMError(currentATM)
else
    warn("[AutoFarmATM] ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
end
