-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß BMX ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ BodyVelocity ‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ (loop) + ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö AutoFarmATM

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
if not humanoid then
    warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Humanoid ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    return
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡∏ó‡∏≤‡∏á ATM
local function DismountIfSeated()
    if humanoid.SeatPart then
        print("[üö≤] ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‚Üí ‡∏•‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤ ATM")
        humanoid.Sit = false
        task.wait(0.3)
    end
end

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏´‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏£‡∏ñ
local function TryBoostBMX()
    -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ VehicleSeat ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏±‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà
    local seat = nil
    for _, s in ipairs(Workspace:GetDescendants()) do
        if s:IsA("VehicleSeat") and s.Occupant == humanoid then
            seat = s
            break
        end
    end

    if not seat then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö VehicleSeat ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏±‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà (Occupant)")
        return
    end

    -- ‡πÑ‡∏•‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏´‡∏≤ Model ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô BMX ‡πÇ‡∏î‡∏¢‡πÄ‡∏ä‡πá‡∏Å‡∏à‡∏≤‡∏Å Vehicles
    local bmx = seat:FindFirstAncestorWhichIsA("Model")
    while bmx and bmx.Parent ~= Workspace:FindFirstChild("Vehicles") do
        bmx = bmx.Parent
    end

    if not bmx or not bmx:IsA("Model") then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏• BMX ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ Vehicles")
        return
    end

    print("‚úÖ ‡∏û‡∏ö BMX ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: " .. bmx.Name)

    -- ‡∏õ‡∏•‡∏î Anchor
    for _, part in ipairs(bmx:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = false
        end
    end

    -- ‡∏´‡∏≤‡∏ä‡∏¥‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà BodyVelocity (‡πÉ‡∏ä‡πâ DriverSeat ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å)
    local mainPart = bmx:FindFirstChild("DriverSeat") or bmx.PrimaryPart or bmx:FindFirstChildWhichIsA("BasePart")
    if not mainPart then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏¥‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß")
        return
    end

    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï BodyVelocity ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°
    local bv = mainPart:FindFirstChild("BMXForce") or Instance.new("BodyVelocity")
    bv.Name = "BMXForce"
    bv.MaxForce = Vector3.new(1e5, 0, 1e5)
    bv.Parent = mainPart

    -- ‡πÉ‡∏ä‡πâ RunService ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö Velocity ‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°
    RunService.Heartbeat:Connect(function()
        if not mainPart or not mainPart:IsDescendantOf(Workspace) then return end
        if humanoid.SeatPart == seat then
            bv.Velocity = mainPart.CFrame.LookVector * 120
        else
            bv.Velocity = Vector3.zero
        end
    end)

    print("üöÄ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß BMX ‡∏î‡πâ‡∏ß‡∏¢ BodyVelocity (‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
end

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
TryBoostBMX()

-- ‡πÉ‡∏´‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏ñ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö AutoFarmATM
_G.DismountIfSeated = DismountIfSeated
