-- LocalScript: AutoFarmATM (StarterPlayerScripts)
-- ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å ATM ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏°‡∏µ ATM ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")

local ATMFolder = Workspace:WaitForChild("Map"):WaitForChild("Props"):WaitForChild("ATMs")

local currentATM = nil
local moving = false

-- üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ATM ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ERROR ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function IsATMError(atm)
    for _, gui in pairs(atm:GetDescendants()) do
        if gui:IsA("TextLabel") then
            local raw = string.upper(gui.Text or "")
            print("[‡∏ï‡∏£‡∏ß‡∏à ATM] =>", gui:GetFullName(), "Text =", raw)
            if string.find(raw, "ERROR") then
                return true
            end
        end
    end
    return false
end

-- üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà Error)
local function FindNearestATM()
    local nearestATM = nil
    local shortestDist = math.huge
    for index, atm in pairs(ATMFolder:GetChildren()) do
        local pos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
        local dist = (pos - rootPart.Position).Magnitude
        print("[ATM ‡∏•‡∏≥‡∏î‡∏±‡∏ö " .. index .. "] =>", atm:GetFullName(), " | ‡∏£‡∏∞‡∏¢‡∏∞ =", math.floor(dist))

        if not IsATMError(atm) and dist < shortestDist then
            shortestDist = dist
            nearestATM = atm
        else
            print("[‚õî] ‡∏Ç‡πâ‡∏≤‡∏° ATM ‡∏ó‡∏µ‡πà Error ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏Å‡∏•‡∏Å‡∏ß‡πà‡∏≤")
        end
    end
    return nearestATM
end

-- üß≠ ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Pathfinding
local function WalkToATM(atm)
    if not atm then return end
    moving = true
    currentATM = atm
    local targetPos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentCanClimb = true,
        WaypointSpacing = 4
    })
    path:ComputeAsync(rootPart.Position, targetPos)
    if path.Status == Enum.PathStatus.Success then
        print("[‚úÖ AutoFarmATM] ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM =>", atm:GetFullName())
        for _, waypoint in ipairs(path:GetWaypoints()) do
            -- ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏´‡∏°
            local newATM = FindNearestATM()
            if newATM and newATM ~= currentATM then
                local newPos = newATM:IsA("Model") and newATM:GetModelCFrame().Position or newATM.Position
                local distNew = (newPos - rootPart.Position).Magnitude
                local distCur = (targetPos - rootPart.Position).Magnitude
                if distNew + 2 < distCur then -- ‡∏ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏Å
                    print("[üîÅ] ‡πÄ‡∏à‡∏≠ ATM ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏ß‡πà‡∏≤ ‚Üí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢")
                    WalkToATM(newATM)
                    return
                end
            end
            humanoid:MoveTo(waypoint.Position)
            humanoid.MoveToFinished:Wait()
        end
    else
        warn("[‚ùå AutoFarmATM] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì path ‡πÑ‡∏î‡πâ! ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", path.Status.Name)
    end
    moving = false
end

-- üîÅ ‡∏•‡∏π‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏° ATM ‡πÅ‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
while true do
    if not moving then
        local atm = FindNearestATM()
        if atm then
            WalkToATM(atm)
        else
            warn("[AutoFarmATM] ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
        end
    end
    task.wait(3)
end
