-- LocalScript: AutoFarmATM (StarterPlayerScripts)
-- ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏π‡πâ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏´‡∏≤‡∏Å‡∏ï‡∏π‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")
local UserInputService = game:GetService("UserInputService") -- ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏õ)

-- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≤‡∏Å Players:GetLocalPlayer() ‡πÄ‡∏õ‡πá‡∏ô Players.LocalPlayer
local player = Players.LocalPlayer 
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")

local ATMFolder = Workspace:WaitForChild("Map"):WaitForChild("Props"):WaitForChild("ATMs")

local currentATM = nil
local moving = false

-- üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ATM ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (ProximityPrompt.Enabled == true)
local function IsATMReady(atm)
    local prompt = atm:FindFirstChildWhichIsA("ProximityPrompt", true)
    if prompt then
        return prompt.Enabled
    end
    return false
end

-- üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ATM ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
local function FindNearestReadyATM()
    local nearestATM = nil
    local shortestDist = math.huge
    for _, atm in pairs(ATMFolder:GetChildren()) do
        -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Model ‡∏´‡∏£‡∏∑‡∏≠ BasePart ‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        if not (atm:IsA("Model") or atm:IsA("BasePart")) then
            continue -- ‡∏Ç‡πâ‡∏≤‡∏°‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Model ‡∏´‡∏£‡∏∑‡∏≠ Part
        end

        local pos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
        local dist = (pos - rootPart.Position).Magnitude
        -- print("[ATM] =>", atm:GetFullName(), " | ‡∏£‡∏∞‡∏¢‡∏∞ =", math.floor(dist), "| ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:", IsATMReady(atm)) -- ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î Debugging
        
        if IsATMReady(atm) and dist < shortestDist then
            shortestDist = dist
            nearestATM = atm
        end
    end
    return nearestATM
end

-- üß≠ ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Pathfinding
local function WalkToATM(atm)
    if not atm then return end
    moving = true
    currentATM = atm
    local targetPos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position

    -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ WalkSpeed ‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ
    local originalWalkSpeed = humanoid.WalkSpeed
    -- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÄ‡∏ä‡πà‡∏ô 30 ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
    humanoid.WalkSpeed = 30 
    print(string.format("[AutoFarmATM] ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ WalkSpeed ‡πÄ‡∏õ‡πá‡∏ô %.1f", humanoid.WalkSpeed))

    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentCanClimb = true,
        WaypointSpacing = 4
    })

    path:ComputeAsync(rootPart.Position, targetPos)

    if path.Status == Enum.PathStatus.Success then
        print("[‚úÖ AutoFarmATM] ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM =>", atm:GetFullName())
        for _, waypoint in ipairs(path:GetWaypoints()) do
            -- ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ ATM ‡∏¢‡∏±‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if not IsATMReady(currentATM) or not humanoid.Parent then
                print("[‚ö†Ô∏è] ATM ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏¢ ‚Üí ‡∏´‡∏≤‡∏ï‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà")
                humanoid:MoveTo(rootPart.Position) -- ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                humanoid.WalkSpeed = originalWalkSpeed -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ WalkSpeed
                moving = false
                return
            end

            humanoid:MoveTo(waypoint.Position)
            -- ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
            local success, message = pcall(function()
                humanoid.MoveToFinished:Wait(5) -- ‡∏£‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            end)

            if not success or message == "timeout" then
                warn("[‚ùå AutoFarmATM] MoveToFinished timeout ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", message)
                humanoid:MoveTo(rootPart.Position) -- ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
                humanoid.WalkSpeed = originalWalkSpeed -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ WalkSpeed
                moving = false
                return
            end
        end

        print("[‚úÖ AutoFarmATM] ‡∏ñ‡∏∂‡∏á ATM ‡πÅ‡∏•‡πâ‡∏ß:", atm:GetFullName())
        -- !!! ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô ProximityPrompt !!!
        -- ‡πÉ‡∏ô LocalScript ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ ProximityPrompt ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
        -- ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ "AutoFarm" ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡πÄ‡∏Å‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ RemoteEvent
        -- ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "InteractWithATM" ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏Ñ‡∏•‡πÄ‡∏≠‡∏ô‡∏ï‡πå‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
        -- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ä‡πà‡∏ô: game.ReplicatedStorage.RemoteEvents.InteractWithATM:FireServer(atm)
        -- ‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏≤‡∏ñ‡∏∂‡∏á

        local prompt = currentATM:FindFirstChildWhichIsA("ProximityPrompt", true)
        if prompt then
            print("[AutoFarmATM] ‡∏û‡∏ö ProximityPrompt ‡∏ö‡∏ô ATM ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠ RemoteEvent ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô")
            -- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ProximityPrompt (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏õ):
            -- UserInputService:SimulateKeyPress(Enum.KeyCode.E) -- ‡∏´‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏Ñ‡∏∑‡∏≠ E
        end

    else
        warn("[‚ùå AutoFarmATM] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì path ‡πÑ‡∏î‡πâ! ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", path.Status.Name)
    end
    humanoid.WalkSpeed = originalWalkSpeed -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ WalkSpeed ‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
    moving = false
end

-- üîÅ ‡∏•‡∏π‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏° ATM ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏π‡πâ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°
while true do
    if not moving and humanoid.Parent then -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡∏π‡πà
        local atm = FindNearestReadyATM()
        if atm then
            WalkToATM(atm)
        else
            warn("[AutoFarmATM] ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ATM ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        end
    elseif not humanoid.Parent then
        warn("[AutoFarmATM] ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏´‡∏£‡∏∑‡∏≠ Humanoid/Character ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        break -- ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏¢
    end
    task.wait(3)
end
