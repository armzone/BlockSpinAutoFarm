-- LocalScript: AutoFarmATM (StarterPlayerScripts)
-- ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ä‡πâ loop ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°: ‡πÄ‡∏ä‡πá‡∏Ñ ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á ERROR

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")

local ATMFolder = Workspace:WaitForChild("Map"):WaitForChild("Props"):WaitForChild("ATMs")

-- üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ATM ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ERROR ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function IsATMError(atm)
    for _, part in pairs(atm:GetDescendants()) do
        if part:IsA("TextLabel") and part.Text and string.find(string.upper(part.Text), "ERROR") then
            return true
        end
    end
    return false
end

-- üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà Error)
local function FindNearestATM()
    local nearestATM = nil
    local shortestDist = math.huge
    for _, atm in pairs(ATMFolder:GetChildren()) do
        if IsATMError(atm) then
            print("[‚õî] ‡∏Ç‡πâ‡∏≤‡∏° ATM ‡∏ó‡∏µ‡πà Error:", atm:GetFullName())
            continue
        end
        local pos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
        local dist = (pos - rootPart.Position).Magnitude
        if dist < shortestDist then
            shortestDist = dist
            nearestATM = atm
        end
    end
    return nearestATM
end

-- üß≠ ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Pathfinding
local function WalkToATM(atm)
    local targetPos = atm:IsA("Model") and atm:GetModelCFrame().Position or atm.Position
    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentCanClimb = true,
        WaypointSpacing = 4
    })
    path:ComputeAsync(rootPart.Position, targetPos)
    if path.Status == Enum.PathStatus.Success then
        print("[‚úÖ AutoFarmATM] Path ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á ATM...")
        for _, waypoint in ipairs(path:GetWaypoints()) do
            humanoid:MoveTo(waypoint.Position)
            humanoid.MoveToFinished:Wait()
        end
        return true
    else
        warn("[‚ùå AutoFarmATM] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì path ‡πÑ‡∏î‡πâ! ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", path.Status.Name)
        return false
    end
end

-- üîÅ ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏° ATM
while true do
    local atm = FindNearestATM()
    if atm then
        WalkToATM(atm)
    else
        warn("[AutoFarmATM] ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ATM ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
    end
    task.wait(10)
end
